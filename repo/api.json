{
  "landing":
  {
    "recommended":[
      "kitematic/html",
      "kitematic/ghost",
      "jenkins",
      "redis",
      "rethinkdb",
      "kitematic/minecraft"
    ],
    "repos": [
      {
        "repo": "kitematic/hello-world-nginx",
        "gradient_start": "#24B8EB",
        "gradient_end": "#218CF4",
        "img": "kitematic_html.png"
      },
      {
        "repo": "ghost",
        "gradient_start": "#262A2D",
        "gradient_end": "#14181C",
        "img": "ghost.png"
      },
      {
        "repo": "jenkins",
        "gradient_start": "#47728C",
        "gradient_end": "#325062",
        "img": "jenkins.png"
      },
      {
        "repo": "redis",
        "gradient_start": "#DA2D1D",
        "gradient_end": "#A61F1C",
        "img": "redis.png"
      },
      {
        "repo": "rethinkdb",
        "gradient_start": "#1E3F4C",
        "gradient_end": "#183B47",
        "img": "rethinkdb.png"
      },
      {
        "repo": "kitematic/minecraft",
        "gradient_start": "#5A5952",
        "gradient_end": "#262622",
        "img": "kitematic_minecraft.png"
      }
    ]
  },
  "search": {
    "nginx":
    {
      "num_pages": 126,
      "num_results": 3149,
      "results": [
        {
          "is_automated": false,
          "name": "nginx",
          "is_trusted": false,
          "is_official": true,
          "star_count": 884,
          "description": "Official build of Nginx."
        },
        {
          "is_automated": true,
          "name": "jwilder/nginx-proxy",
          "is_trusted": true,
          "is_official": false,
          "star_count": 213,
          "description": "Automated Nginx reverse proxy for docker containers"
        },
        {
          "is_automated": true,
          "name": "maxexcloo/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 5,
          "description": "Docker framework container with Nginx installed and configured to load from /data. Based on maxexcloo/debian.\nDirectory structure can be found here: http://git.io/TIKOFg"
        },
        {
          "is_automated": true,
          "name": "maxexcloo/nginx-php",
          "is_trusted": true,
          "is_official": false,
          "star_count": 35,
          "description": "Docker framework container with Nginx and PHP-FPM installed and configured to load from /data. Based on maxexcloo/nginx.\nDirectory structure can be found here: http://git.io/TIKOFg"
        },
        {
          "is_automated": true,
          "name": "klaemo/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "nginx 1.7.0 (mainline)"
        },
        {
          "is_automated": true,
          "name": "million12/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 2,
          "description": "Nginx: extensible, nicely tuned for better performance."
        },
        {
          "is_automated": true,
          "name": "million12/nginx-php",
          "is_trusted": true,
          "is_official": false,
          "star_count": 6,
          "description": "Nginx + PHP-FPM 5.5, 5.6, 7.0 (NG), CentOS-7 based"
        },
        {
          "is_automated": true,
          "name": "aegypius/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 0,
          "description": "confd managed nginx reverse proxy"
        },
        {
          "is_automated": true,
          "name": "radial/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "Spoke container for Nginx, a high performance web server."
        },
        {
          "is_automated": true,
          "name": "dock0/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "Arch container running nginx"
        },
        {
          "is_automated": true,
          "name": "richarvey/nginx-php-fpm",
          "is_trusted": true,
          "is_official": false,
          "star_count": 25,
          "description": "Container running Nginx + PHP-FPM capable of pulling application code from git"
        },
        {
          "is_automated": true,
          "name": "h3nrik/nginx-ldap",
          "is_trusted": true,
          "is_official": false,
          "star_count": 6,
          "description": "NGINX web server with LDAP/AD, SSL and proxy support. Perfect for Docker registry authentication."
        },
        {
          "is_automated": true,
          "name": "devries/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 4,
          "description": "A standard ubuntu nginx installation with support for HTTP and HTTPS ports. Standard ubuntu distribution as well as the stable and mainline nginx builds are available."
        },
        {
          "is_automated": true,
          "name": "rnbwd/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "custom fork of jwilder/nginx-proxy"
        },
        {
          "is_automated": true,
          "name": "abevoelker/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "nginx"
        },
        {
          "is_automated": true,
          "name": "marvambass/nginx-registry-proxy",
          "is_trusted": true,
          "is_official": false,
          "star_count": 17,
          "description": "Docker Registry Reverse Proxy with Basic Auth Nginx Server - ready for production"
        },
        {
          "is_automated": true,
          "name": "zenithar/nano-nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 5,
          "description": "Nano NGiNX Container, compiled from scratch."
        },
        {
          "is_automated": true,
          "name": "richarvey/nginx-nodejs",
          "is_trusted": true,
          "is_official": false,
          "star_count": 5,
          "description": "Container running Nginx + NodeJS capable of pulling application code from git and install NPM deps"
        },
        {
          "is_automated": true,
          "name": "densuke/nginx-php5",
          "is_trusted": true,
          "is_official": false,
          "star_count": 0,
          "description": "NginxとPHP5を使えるように調整したものです。"
        },
        {
          "is_automated": true,
          "name": "simplyintricate/nginx-php",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "Automated weekly recurring build of nginx with PHP-FPM installed in a single container"
        },
        {
          "is_automated": true,
          "name": "dylanlindgren/docker-nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 7,
          "description": "Docker image for Nginx, to be used in combination with dylanlindgren/docker-phpfpm"
        },
        {
          "is_automated": true,
          "name": "fgaudin/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 0,
          "description": "Nginx container using logstash-forwarder"
        },
        {
          "is_automated": true,
          "name": "dasrick/fedora-nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 0,
          "description": "NGINX image - port 80, 443 - based on Fedora20"
        },
        {
          "is_automated": true,
          "name": "desertbit/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": "Deploy Nginx with some useful presets available."
        },
        {
          "is_automated": true,
          "name": "dperson/nginx",
          "is_trusted": true,
          "is_official": false,
          "star_count": 1,
          "description": ""
        }
      ],
      "page_size": 25,
      "query": "nginx",
      "page": 1
    }
  },
  "info": {
    "kitematic/hello-world-nginx": {"full_description": "", "automated_build": false, "stars": 5, "name": "hello-world-nginx", "full_name": "kitematic/hello-world-nginx", "short_description": "A light-weight nginx container that demonstrates the features of Kitematic", "pulls": 23784, "namespace": "kitematic"},
    "library/ghost": {"full_description": "", "automated_build": true, "stars": 3, "name": "ghost", "full_name": "kitematic/ghost", "short_description": "Ghost is a simple publishing platform that allows you to share your stories with the world.", "pulls": 3808, "namespace": "kitematic"},
    "library/jenkins": {"full_description": "# Supported tags and respective `Dockerfile` links\n\n-\t[`latest`, `1.596.2` (*Dockerfile*)](https://github.com/jenkinsci/jenkins-ci.org-docker/blob/8f909abee98247ad482efb6d21833e2054e3e9de/Dockerfile)\n\nFor more information about this image and its history, please see the [relevant manifest file (`library/jenkins`)](https://github.com/docker-library/official-images/blob/master/library/jenkins) in the [`docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images).\n\n# Jenkins\n\nThe Jenkins Continuous Integration and Delivery server.\n\nThis is a fully functional Jenkins server, based on the Long Term Support release [http://jenkins-ci.org/](http://jenkins-ci.org/).\n\n![logo](http://jenkins-ci.org/sites/default/files/jenkins_logo.png)\n\n# How to use this image\n\n\tdocker run -p 8080:8080 jenkins\n\nThis will store the workspace in /var/jenkins_home. All Jenkins data lives in there - including plugins and configuration. You will probably want to make that a persistent volume:\n\n\tdocker run --name myjenkins -p 8080:8080 -v /var/jenkins_home jenkins\n\nThe volume for the \"myjenkins\" named container will then be persistent.\n\nYou can also bind mount in a volume from the host:\n\nFirst, ensure that /your/home is accessible by the jenkins user in container (jenkins user - uid 102 normally - or use -u root), then:\n\n\tdocker run -p 8080:8080 -v /your/home:/var/jenkins_home jenkins\n\n## Backing up data\n\nIf you bind mount in a volume - you can simply back up that directory (which is jenkins_home) at any time.\n\nIf your volume is inside a container - you can use `docker cp\n$ID:/var/jenkins_home` command to extract the data.\n\n## Attaching build executors\n\nYou can run builds on the master (out of the box) buf if you want to attach build slave servers: make sure you map the port: `-p 50000:50000` - which will be used when you connect a slave agent.\n\n[Here](https://registry.hub.docker.com/u/maestrodev/build-agent/) is an example docker container you can use as a build server with lots of good tools installed - which is well worth trying.\n\n## Upgrading\n\nAll the data needed is in the /var/jenkins_home directory - so depending on how you manage that - depends on how you upgrade. Generally - you can copy it out - and then \"docker pull\" the image again - and you will have the latest LTS - you can then start up with -v pointing to that data (/var/jenkins_home) and everything will be as you left it.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.6.2.\n\nSupport for older versions (down to 1.0) is provided on a best-effort basis.\n\n# User Feedback\n\n## Documentation\n\nDocumentation for this image is stored in the [`jenkins/` directory](https://github.com/docker-library/docs/tree/master/jenkins) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/cloudbees/jenkins-ci.org-docker/issues).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/cloudbees/jenkins-ci.org-docker/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.", "automated_build": false, "stars": 386, "name": "jenkins", "full_name": "library/jenkins", "short_description": "Official Jenkins Docker image", "pulls": 175596, "namespace": "library"},
    "library/redis": {"full_description": "# Supported tags and respective `Dockerfile` links\n\n-\t[`2.6.17`, `2.6` (*2.6/Dockerfile*)](https://github.com/docker-library/redis/blob/5a480f7c9f05822c31204a7197d209ef9db1a32c/2.6/Dockerfile)\n-\t[`2.8.20`, `2.8`, `2` (*2.8/Dockerfile*)](https://github.com/docker-library/redis/blob/3b5b408972da5d788a483dfcd0e49b99937e5fc2/2.8/Dockerfile)\n-\t[`3.0.1`, `3.0`, `3`, `latest` (*3.0/Dockerfile*)](https://github.com/docker-library/redis/blob/3b5b408972da5d788a483dfcd0e49b99937e5fc2/3.0/Dockerfile)\n\nFor more information about this image and its history, please see the [relevant manifest file (`library/redis`)](https://github.com/docker-library/official-images/blob/master/library/redis) in the [`docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images).\n\n# What is Redis?\n\nRedis is an open-source, networked, in-memory, key-value data store with optional durability. It is written in ANSI C. The development of Redis has been sponsored by Pivotal since May 2013; before that, it was sponsored by VMware. According to the monthly ranking by DB-Engines.com, Redis is the most popular key-value store. The name Redis means REmote DIctionary Server.\n\n> [wikipedia.org/wiki/Redis](https://en.wikipedia.org/wiki/Redis)\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/master/redis/logo.png)\n\n# How to use this image\n\n## start a redis instance\n\n\tdocker run --name some-redis -d redis\n\nThis image includes `EXPOSE 6379` (the redis port), so standard container linking will make it automatically available to the linked containers (as the following examples illustrate).\n\n## start with persistent storage\n\n\tdocker run --name some-redis -d redis redis-server --appendonly yes\n\nIf persistence is enabled, data is stored in the `VOLUME /data`, which can be used with `--volumes-from some-volume-container` or `-v /docker/host/dir:/data` (see [docs.docker volumes](http://docs.docker.com/userguide/dockervolumes/)).\n\nFor more about Redis Persistence, see [http://redis.io/topics/persistence](http://redis.io/topics/persistence).\n\n## connect to it from an application\n\n\tdocker run --name some-app --link some-redis:redis -d application-that-uses-redis\n\n## ... or via `redis-cli`\n\n\tdocker run -it --link some-redis:redis --rm redis sh -c 'exec redis-cli -h \"$REDIS_PORT_6379_TCP_ADDR\" -p \"$REDIS_PORT_6379_TCP_PORT\"'\n\n## Additionally, If you want to use your own redis.conf ...\n\nYou can create your own Dockerfile that adds a redis.conf from the context into /data/, like so.\n\n\tFROM redis\n\tCOPY redis.conf /usr/local/etc/redis/redis.conf\n\tCMD [ \"redis-server\", \"/usr/local/etc/redis/redis.conf\" ]\n\nAlternatively, you can specify something along the same lines with `docker run` options.\n\n\tdocker run -v /myredis/conf/redis.conf:/usr/local/etc/redis/redis.conf --name myredis redis /usr/local/etc/redis/redis.conf\n\nWhere `/myredis/conf/` is a local directory containing your `redis.conf` file. Using this method means that there is no need for you to have a Dockerfile for your redis container.\n\n# License\n\nView [license information](http://redis.io/topics/license) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.6.2.\n\nSupport for older versions (down to 1.0) is provided on a best-effort basis.\n\n# User Feedback\n\n## Documentation\n\nDocumentation for this image is stored in the [`redis/` directory](https://github.com/docker-library/docs/tree/master/redis) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/docker-library/redis/issues).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/docker-library/redis/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.", "automated_build": false, "stars": 759, "name": "redis", "full_name": "library/redis", "short_description": "Redis is an open source key-value store that functions as a data structure server.", "pulls": 4534845, "namespace": "library"},
    "library/rethinkdb": {"full_description": "# Supported tags and respective `Dockerfile` links\n\n-\t[`1.15.1` (*jessie/1.15.1/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.15.1/Dockerfile)\n-\t[`1.15.2` (*jessie/1.15.2/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.15.2/Dockerfile)\n-\t[`1.15.3`, `1.15` (*jessie/1.15.3/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.15.3/Dockerfile)\n-\t[`1.16.0` (*jessie/1.16.0/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.16.0/Dockerfile)\n-\t[`1.16.1` (*jessie/1.16.1/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.16.1/Dockerfile)\n-\t[`1.16.2` (*jessie/1.16.2/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.16.2/Dockerfile)\n-\t[`1.16.3`, `1.16`, `1` (*jessie/1.16.3/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/1.16.3/Dockerfile)\n-\t[`2.0.0` (*jessie/2.0.0/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/2.0.0/Dockerfile)\n-\t[`2.0.1`, `2.0`, `2`, `latest` (*jessie/2.0.1/Dockerfile*)](https://github.com/stuartpb/rethinkdb-dockerfiles/blob/45403812696b1c65186accec00c273d7abdecaf8/jessie/2.0.1/Dockerfile)\n\nFor more information about this image and its history, please see the [relevant manifest file (`library/rethinkdb`)](https://github.com/docker-library/official-images/blob/master/library/rethinkdb) in the [`docker-library/official-images` GitHub repo](https://github.com/docker-library/official-images).\n\n# What is RethinkDB?\n\nRethinkDB is an open-source, distributed database built to store JSON documents and effortlessly scale to multiple machines. It's easy to set up and learn and features a simple but powerful query language that supports table joins, groupings, aggregations, and functions.\n\n![logo](https://raw.githubusercontent.com/docker-library/docs/master/rethinkdb/logo.png)\n\n# How to use this image\n\n## Start an instance with data mounted in the working directory\n\nThe default CMD of the image is `rethinkdb --bind all`, so the RethinkDB daemon will bind to all network interfaces available to the container (by default, RethinkDB only accepts connections from `localhost`).\n\n```bash\ndocker run --name some-rethink -v \"$PWD:/data\" -d rethinkdb\n```\n\n## Connect the instance to an application\n\n```bash\ndocker run --name some-app --link some-rethink:rdb -d application-that-uses-rdb\n```\n\n## Connecting to the web admin interface on the same host\n\n```bash\n$BROWSER \"http://$(docker inspect --format \\\n  '{{ .NetworkSettings.IPAddress }}' some-rethink):8080\"\n```\n\n# Connecting to the web admin interface on a remote / virtual host via SSH\n\nWhere `remote` is an alias for the remote user@hostname:\n\n```bash\n# start port forwarding\nssh -fNTL localhost:8080:$(ssh remote \"docker inspect --format \\\n  '{{ .NetworkSettings.IPAddress }}' some-rethink\"):8080 remote\n\n# open interface in browser\nxdg-open http://localhost:8080\n\n# stop port forwarding\nkill $(lsof -t -i @localhost:8080 -sTCP:listen)\n```\n\n## Configuration\n\nSee the [official docs](http://www.rethinkdb.com/docs/) for infomation on using and configuring a RethinkDB cluster.\n\n# License\n\nView [license information](http://www.gnu.org/licenses/agpl-3.0.html) for the software contained in this image.\n\n# Supported Docker versions\n\nThis image is officially supported on Docker version 1.6.2.\n\nSupport for older versions (down to 1.0) is provided on a best-effort basis.\n\n# User Feedback\n\n## Documentation\n\nDocumentation for this image is stored in the [`rethinkdb/` directory](https://github.com/docker-library/docs/tree/master/rethinkdb) of the [`docker-library/docs` GitHub repo](https://github.com/docker-library/docs). Be sure to familiarize yourself with the [repository's `README.md` file](https://github.com/docker-library/docs/blob/master/README.md) before attempting a pull request.\n\n## Issues\n\nIf you have any problems with or questions about this image, please contact us through a [GitHub issue](https://github.com/stuartpb/rethinkdb-dockerfiles/issues).\n\nYou can also reach many of the official image maintainers via the `#docker-library` IRC channel on [Freenode](https://freenode.net).\n\n## Contributing\n\nYou are invited to contribute new features, fixes, or updates, large or small; we are always thrilled to receive pull requests, and do our best to process them as fast as we can.\n\nBefore you start to code, we recommend discussing your plans through a [GitHub issue](https://github.com/stuartpb/rethinkdb-dockerfiles/issues), especially for more ambitious contributions. This gives other contributors a chance to point you in the right direction, give you feedback on your design, and help you find out if someone else is working on the same thing.", "automated_build": false, "stars": 37, "name": "rethinkdb", "full_name": "library/rethinkdb", "short_description": "RethinkDB is an open-source, document database that makes it easy to build and scale realtime apps.", "pulls": 12392, "namespace": "library"},
    "kitematic/minecraft": {"full_description": "The Minecraft multiplayer server allows two or more players to play Minecraft together. ", "automated_build": true, "stars": 11, "name": "minecraft", "full_name": "kitematic/minecraft", "short_description": "The Minecraft multiplayer server allows two or more players to play Minecraft together", "pulls": 3156, "namespace": "kitematic"}
  }
}
